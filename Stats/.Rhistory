data = read.csv(file.choose(), header=TRUE)
dataFlip = data[nrow(data):1,]  #Flip vertical car l'historique est inversé
NC = dataFlip[,2]
mWMC = dataFlip[,3]
mcBC = dataFlip[,4]
size = length(NC)
xAxis = 1:size
#NC
plot(xAxis,NC,main = "Évolution de NC dans le temps")
#mWMC
plot(xAxis,mWMC,main = "Évolution de mWMC dans le temps")
#mcBC
plot(xAxis,mcBC,main = "Évolution de mcBC dans le temps")
data = read.csv(file.choose(), header=TRUE)
dataFlip = data[nrow(data):1,]  #Flip vertical car l'historique est inversé
NC = dataFlip[,2]
mWMC = dataFlip[,3]
mcBC = dataFlip[,4]
size = length(NC)
xAxis = 1:size
#NC
plot(xAxis,NC,main = "Évolution de NC dans le temps")
#mWMC
plot(xAxis,mWMC,main = "Évolution de mWMC dans le temps")
#mcBC
plot(xAxis,mcBC,main = "Évolution de mcBC dans le temps")
#Boxplot de NC
boxplot(NC, main = "NC",
xlab = "Nombre de classes",
col = "Orange",
border = "Red",
horizontal = TRUE,
notch = TRUE)
text(x = boxplot.stats(NC)$stats, labels = boxplot.stats(NC)$stats,
y = 1.25)
#Boxplot de mWMC
boxplot(mWMC, main = "mWMC",
xlab = "Moyenne de la métrique WMC",
col = "Orange",
border = "Red",
horizontal = TRUE,
notch = TRUE,
outline = FALSE)
text(x = round(boxplot.stats(mWMC)$stats, digits = 3), labels = round(boxplot.stats(mWMC)$stats, digits = 3),
y = 1.25)
#Boxplot de mcBC
boxplot(mcBC, main = "mcBC",
xlab = "Moyenne de la métrique classe_BC",
col = "Orange",
border = "Red",
horizontal = TRUE,
notch = TRUE,
outline = FALSE)
text(x = round(boxplot.stats(mcBC)$stats, digits = 3), labels = round(boxplot.stats(mcBC)$stats, digits = 3),
y = 1.25)
#Boxplot de NC
boxplot(NC, main = "NC",
xlab = "Nombre de classes",
col = "Orange",
border = "Red",
horizontal = TRUE,
notch = TRUE)
text(x = boxplot.stats(NC)$stats, labels = boxplot.stats(NC)$stats,
y = 1.25)
#Boxplot de mWMC
boxplot(mWMC, main = "mWMC",
xlab = "Moyenne de la métrique WMC",
col = "Orange",
border = "Red",
horizontal = TRUE,
notch = TRUE,
outline = TRUE)
text(x = round(boxplot.stats(mWMC)$stats, digits = 3), labels = round(boxplot.stats(mWMC)$stats, digits = 3),
y = 1.25)
#Boxplot de mcBC
boxplot(mcBC, main = "mcBC",
xlab = "Moyenne de la métrique classe_BC",
col = "Orange",
border = "Red",
horizontal = TRUE,
notch = TRUE,
outline = TRUE)
text(x = round(boxplot.stats(mcBC)$stats, digits = 3), labels = round(boxplot.stats(mcBC)$stats, digits = 3),
y = 1.25)
#Boxplot de NC
boxplot(NC, main = "NC",
xlab = "Nombre de classes",
col = "Orange",
border = "Red",
horizontal = TRUE,
notch = TRUE)
#Boxplot de NC
boxplot(NC, main = "NC",
xlab = "Nombre de classes",
col = "Orange",
border = "Red",
horizontal = TRUE,
notch = TRUE)
#Boxplot de mWMC
boxplot(mWMC, main = "mWMC",
xlab = "Moyenne de la métrique WMC",
col = "Orange",
border = "Red",
horizontal = TRUE,
notch = TRUE,
outline = TRUE)
#Boxplot de mcBC
boxplot(mcBC, main = "mcBC",
xlab = "Moyenne de la métrique classe_BC",
col = "Orange",
border = "Red",
horizontal = TRUE,
notch = TRUE,
outline = TRUE)
#Spearman pour NC et mWMC
cor(NC,mWMC,method = "spearman")
#Graphe de mWMC en fonction de NC
plot(NC,mWMC,main = "mWMC en fonction de NC")
#Spearman pour NC et mcBC
cor(NC,mWMC,method = "spearman")
#Spearman pour NC et mcBC
cor(NC,mcBC,method = "spearman")
#Graphe de mcBC en fonction de NC
plot(NC,mcBC,main = "mcBC en fonction de NC")
spearman.ci(NC, mWMC, nrep = 1000, conf.level = 0.95)
install.packages("spearmanCI")
spearman.ci(NC, mWMC, nrep = 1000, conf.level = 0.95)
spearmanCI(NC, mWMC, level = 0.95, method = "Euclidean", plot = FALSE)
install.packages("spearmanCI")
#Spearman pour NC et mWMC
cor(NC,mWMC,method = "spearman")
#Spearman pour NC et mWMC
cor.test(NC,mWMC,method = "spearman")
#Spearman pour NC et mWMC
cor.test(NC,mWMC,method = "spearman",exact=FALSE)
#Spearman pour NC et mcBC
cor.test(NC,mcBC,method = "spearman",exact=FALSE)
test1 = 1:size
cor.test(size,test1,method = "spearman",exact=FALSE)
cor.test(xAxis,test1,method = "spearman",exact=FALSE)
#Spearman pour NC et mWMC
cor.test(NC,mWMC,method = "spearman",exact=FALSE)
#Spearman pour NC et mcBC
cor.test(NC,mcBC,method = "spearman",exact=FALSE)
data = read.csv(file.choose(), header=TRUE)
data = read.csv(file.choose(), header=TRUE)
dataFlip = data[nrow(data):1,]  #Flip vertical car l'historique est inversé
NC = dataFlip[,2]
mWMC = dataFlip[,3]
mcBC = dataFlip[,4]
size = length(NC)
xAxis = 1:size
#NC
plot(xAxis,NC,main = "Évolution de NC dans le temps")
#mWMC
plot(xAxis,mWMC,main = "Évolution de mWMC dans le temps")
#mcBC
plot(xAxis,mcBC,main = "Évolution de mcBC dans le temps")
